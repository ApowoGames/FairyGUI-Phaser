import { BitmapFont } from './display/BitmapFont';
import { PixelHitTestData } from './utils/PixelHitTest';
import { ByteBuffer } from './utils/ByteBuffer';
import { UIPackage } from './UIPackage';
export declare class PackageItem {
    owner: UIPackage;
    type: number;
    objectType?: number;
    id: string;
    name: string;
    x: number;
    y: number;
    tx: number;
    ty: number;
    width: number;
    height: number;
    file: string;
    decoded?: boolean;
    loading?: Array<Function>;
    rawData?: ByteBuffer;
    highResolution?: Array<string>;
    branches?: Array<string>;
    scale9Grid?: Phaser.Geom.Rectangle;
    scaleByTile?: boolean;
    tileGridIndice?: number;
    smoothing?: boolean;
    texture?: Phaser.Textures.Texture;
    pixelHitTestData?: PixelHitTestData;
    interval?: number;
    repeatDelay?: number;
    swing?: boolean;
    frames?: Phaser.Textures.Frame[];
    extensionType?: any;
    bitmapFont?: BitmapFont;
    skeletonAnchor?: Phaser.Geom.Point;
    private _isHighRes;
    constructor();
    getBranch(): PackageItem;
    getHighResolution(): PackageItem;
    get isHighRes(): boolean;
    set isHighRes(val: boolean);
    toString(): string;
    load(): Promise<Object>;
}

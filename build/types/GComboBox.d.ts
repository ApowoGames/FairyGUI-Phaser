import { ByteBuffer } from './utils/ByteBuffer';
import { GTextField } from './GTextField';
import { Controller } from './Controller';
import { PopupDirection } from './FieldTypes';
import { GList } from './GList';
import { GObject } from './GObject';
import { GComponent } from "./GComponent";
export declare class GComboBox extends GComponent {
    dropdown: GComponent;
    protected _titleObject: GObject;
    protected _iconObject: GObject;
    protected _list: GList;
    protected _items: string[];
    protected _icons?: string[];
    protected _values: string[];
    protected _popupDirection: PopupDirection;
    private _visibleItemCount;
    private _itemsUpdated;
    private _selectedIndex;
    private _buttonController;
    private _selectionController?;
    private _down;
    private _over;
    constructor(scene: Phaser.Scene, type: any);
    setSize(wv: number, hv: number, ignorePivot?: boolean): void;
    get text(): string;
    set text(value: string);
    get titleColor(): string;
    set titleColor(value: string);
    get titleFontSize(): number;
    set titleFontSize(value: number);
    get icon(): string;
    set icon(value: string);
    get visibleItemCount(): number;
    set visibleItemCount(value: number);
    get popupDirection(): number;
    set popupDirection(value: number);
    get items(): string[];
    set items(value: string[]);
    get icons(): string[];
    set icons(value: string[]);
    get values(): string[];
    set values(value: string[]);
    get selectedIndex(): number;
    set selectedIndex(val: number);
    get value(): string;
    set value(val: string);
    getTextField(): GTextField;
    protected setState(val: string): void;
    get selectionController(): Controller;
    set selectionController(value: Controller);
    handleControllerChanged(c: Controller): void;
    private updateSelectionController;
    dispose(): void;
    getProp(index: number): any;
    setProp(index: number, value: any): void;
    protected constructExtension(buffer: ByteBuffer): Promise<void>;
    private addListen;
    private removeListen;
    setup_afterAdd(buffer: ByteBuffer, beginPos: number): void;
    protected showDropdown(): Promise<void>;
    private __popupWinClosed;
    private __clickItem;
    private __clickItem2;
    private __rollover;
    private __rollout;
    private __mousedown;
    private __mouseup;
}
